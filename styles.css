/* Global Variables */
:root {
    --primary-dark: #0a0e17;
    --secondary-dark: #1a1f2b;
    --accent-blue: #00d9ff;
    --accent-purple: #9d4edd;
    --accent-pink: #ff00a0;
    --text-light: #ffffff;
    --glass-bg: rgba(255, 255, 255, 0.1);
    --glass-border: rgba(255, 255, 255, 0.2);
    --calculator-shadow: 0 15px 35px rgba(0, 0, 0, 0.5);
    --button-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    --glow-blue: 0 0 10px rgba(0, 217, 255, 0.7);
    --glow-purple: 0 0 10px rgba(157, 78, 221, 0.7);
    --glow-pink: 0 0 10px rgba(255, 0, 160, 0.7);
    --hologram-color: rgba(0, 217, 255, 0.15);
    --button-radius: 12px;
    --transition-speed: 0.3s;
}

/* Light Theme Colors */
.light-theme {
    --primary-dark: #f0f8ff;
    --secondary-dark: #e6f4ff;
    --accent-blue: #0077cc;
    --accent-purple: #6a0dad;
    --accent-pink: #d81b60;
    --text-light: #333333;
    --glass-bg: rgba(255, 255, 255, 0.7);
    --glass-border: rgba(0, 0, 0, 0.1);
    --calculator-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
    --button-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    --glow-blue: 0 0 5px rgba(0, 119, 204, 0.4);
    --glow-purple: 0 0 5px rgba(106, 13, 173, 0.4);
    --glow-pink: 0 0 5px rgba(216, 27, 96, 0.4);
    --hologram-color: rgba(0, 119, 204, 0.05);
}

/* Reset and Base Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Montserrat', sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    user-select: none;
}

html, body {
    height: 100%;
    width: 100%;
    overflow-x: hidden;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: var(--primary-dark);
    color: var(--text-light);
    transition: background-color var(--transition-speed);
    position: relative;
    overflow: hidden;
}

body::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
        45deg,
        var(--accent-blue) 0%,
        transparent 20%,
        var(--accent-purple) 40%,
        transparent 60%,
        var(--accent-pink) 80%,
        transparent 100%
    );
    opacity: 0.08;
    z-index: -3;
    animation: gradient-rotate 15s linear infinite;
    pointer-events: none;
}

@keyframes gradient-rotate {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

/* Add subtle particles floating in background */
.particle {
    position: absolute;
    width: 4px;
    height: 4px;
    background: var(--accent-blue);
    border-radius: 50%;
    opacity: 0.2;
    pointer-events: none;
    z-index: -2;
}

.particle:nth-child(3n) {
    background: var(--accent-purple);
}

.particle:nth-child(3n+1) {
    background: var(--accent-pink);
}

@keyframes float-particle {
    0% {
        transform: translateY(0) translateX(0);
        opacity: 0;
    }
    50% {
        opacity: 0.5;
    }
    100% {
        transform: translateY(-100vh) translateX(20px);
        opacity: 0;
    }
}

/* Theme transition effect */
.calculator.theme-transition {
    animation: theme-change 0.5s ease-in-out;
}

@keyframes theme-change {
    0% {
        transform: scale(0.98) rotate(-1deg);
        filter: blur(2px);
    }
    50% {
        transform: scale(1.02) rotate(1deg);
    }
    100% {
        transform: scale(1) rotate(0);
        filter: blur(0);
    }
}

/* Add 3D hover effect to calculator */
.calculator {
    transition: transform 0.3s ease, box-shadow 0.3s ease, filter 0.3s ease;
    transform-style: preserve-3d;
    perspective: 1000px;
}

.calculator:hover {
    transform: translateY(-10px) scale(1.02) rotateX(5deg);
    box-shadow: 
        var(--calculator-shadow),
        0 0 20px var(--accent-blue),
        0 0 40px rgba(0, 217, 255, 0.2);
    filter: brightness(1.1);
}

/* Add shine effect to display */
.display::after {
    content: '';
    position: absolute;
    top: -100%;
    left: -100%;
    width: 50%;
    height: 300%;
    background: linear-gradient(
        to right,
        rgba(255, 255, 255, 0),
        rgba(255, 255, 255, 0.1),
        rgba(255, 255, 255, 0)
    );
    transform: rotate(30deg);
    animation: display-shine 8s ease-in-out infinite;
    pointer-events: none;
}

@keyframes display-shine {
    0%, 100% {
        top: -100%;
        left: -100%;
    }
    30%, 70% {
        top: -50%;
        left: 100%;
    }
}

/* Add button press animation */
.button-active {
    transform: scale(0.92) !important;
    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.3) !important;
    filter: brightness(0.9) !important;
    transition: all 0.1s !important;
}

/* Enhance hover and click effects */
button {
    transition: transform 0.2s cubic-bezier(0.175, 0.885, 0.32, 1.275), 
                background-color 0.2s, 
                box-shadow 0.2s,
                filter 0.2s !important;
    position: relative;
    overflow: hidden;
}

button:hover {
    filter: brightness(1.1);
    z-index: 2;
}

/* Universe Background */
.universe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    z-index: 0;
}

.stars, .twinkling {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.stars {
    background: #000 url('https://i.imgur.com/YKY28eT.png') repeat top center;
    z-index: -2;
}

.twinkling {
    background: transparent url('https://i.imgur.com/XYMF4ca.png') repeat top center;
    z-index: -1;
    animation: move-twinkle 200s linear infinite;
}

@keyframes move-twinkle {
    from {background-position: 0 0;}
    to {background-position: -10000px 5000px;}
}

.light-theme .stars, .light-theme .twinkling {
    opacity: 0;
}

/* Calculator Container */
.calculator-container {
    position: relative;
    width: 100%;
    max-width: 400px;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 20px;
    z-index: 2;
    perspective: 800px;
}

/* Theme Toggle */
.theme-toggle {
    position: absolute;
    top: -50px;
    right: 0;
    z-index: 10;
}

.checkbox {
    opacity: 0;
    position: absolute;
}

.label {
    background-color: var(--secondary-dark);
    border-radius: 50px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 5px;
    position: relative;
    height: 26px;
    width: 50px;
    transform: scale(1.2);
    box-shadow: var(--button-shadow);
    border: 1px solid var(--glass-border);
}

.label .ball {
    background-color: var(--accent-blue);
    border-radius: 50%;
    position: absolute;
    top: 2px;
    left: 2px;
    height: 22px;
    width: 22px;
    transform: translateX(0px);
    transition: transform 0.2s linear, background-color 0.2s linear;
}

.checkbox:checked + .label .ball {
    transform: translateX(24px);
    background-color: var(--accent-purple);
}

.fa-moon {
    color: #f1c40f;
    font-size: 12px;
}

.fa-sun {
    color: #f39c12;
    font-size: 12px;
}

/* Calculator */
.calculator {
    background: var(--secondary-dark);
    border-radius: 20px;
    padding: 18px 20px;
    box-shadow: var(--calculator-shadow);
    width: 100%;
    max-width: 340px;
    position: relative;
    backdrop-filter: blur(10px);
    border: 1px solid var(--glass-border);
    overflow: hidden;
    transition: all var(--transition-speed);
    transform-style: preserve-3d;
    animation: calculator-appear 1s forwards, calculator-float 6s ease-in-out infinite;
}

@keyframes calculator-appear {
    0% {
        opacity: 0;
        transform: translateY(30px) rotateX(20deg);
    }
    100% {
        opacity: 1;
        transform: translateY(0) rotateX(0);
    }
}

/* New floating animation for calculator */
@keyframes calculator-float {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-10px);
    }
}

.calculator:hover {
    box-shadow: var(--calculator-shadow), var(--glow-blue), var(--glow-purple), var(--glow-pink);
    transform: scale(1.02);
}

/* Calculator Header */
.calculator-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 12px;
}

.brand {
    display: flex;
    align-items: center;
}

.brand h1 {
    font-family: 'Orbitron', sans-serif;
    font-size: 16px;
    font-weight: 700;
    color: var(--accent-blue);
    letter-spacing: 1px;
    text-shadow: var(--glow-blue);
    position: relative;
    animation: logo-glow 4s infinite alternate;
}

.brand h1 span {
    color: var(--accent-purple);
    text-shadow: var(--glow-purple);
}

.rocket-icon {
    margin-right: 10px;
    color: var(--accent-pink);
    text-shadow: var(--glow-pink);
    animation: rocket-float 3s ease-in-out infinite;
}

@keyframes rocket-float {
    0%, 100% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-5px);
    }
}

.solar-panel {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 2px;
    width: 50px;
}

.solar-cell {
    height: 10px;
    background: linear-gradient(135deg, #1a1a2e 0%, #0f3460 100%);
    border-radius: 2px;
    position: relative;
    overflow: hidden;
}

.solar-cell::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    animation: solar-shine 4s linear infinite;
}

@keyframes solar-shine {
    0% {
        left: -100%;
    }
    20%, 100% {
        left: 100%;
    }
}

/* Display Container */
.display-container {
    margin-bottom: 12px;
    position: relative;
}

.display {
    background: var(--primary-dark);
    color: var(--accent-blue);
    padding: 10px 15px;
    font-family: 'Orbitron', sans-serif;
    font-size: 1.8em;
    text-align: right;
    border-radius: 15px;
    margin-bottom: 0;
    min-height: 60px;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    box-shadow: inset 0 2px 10px rgba(0, 0, 0, 0.5);
    overflow: hidden;
    border: 1px solid var(--glass-border);
    text-shadow: var(--glow-blue);
    position: relative;
}

.display::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 50%;
    height: 100%;
    background: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.1), transparent);
    animation: scan-line 3s linear infinite;
    pointer-events: none;
}

@keyframes scan-line {
    0% {
        left: -100%;
    }
    100% {
        left: 200%;
    }
}

.equation {
    color: var(--accent-purple);
    text-align: right;
    padding: 5px 15px;
    min-height: 24px;
    font-family: 'Orbitron', sans-serif;
    font-size: 0.9em;
    margin-bottom: 8px;
    overflow-x: auto;
    white-space: nowrap;
    text-shadow: var(--glow-purple);
}

/* Buttons */
.buttons {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 8px;
    padding: 10px;
}

button {
    border: none;
    color: var(--text-light);
    padding: 8px 0;
    font-size: 1.1em;
    border-radius: var(--button-radius);
    cursor: pointer;
    transition: all 0.2s ease;
    box-shadow: var(--button-shadow);
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(5px);
    border: 1px solid var(--glass-border);
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
}

/* Consistent sizing for symbols in buttons */
button i {
    font-size: 1.2em;
}

/* Enhanced button styles */
.btn-number {
    background-color: rgba(40, 45, 55, 0.8);
    font-weight: 500;
    border: 1px solid rgba(60, 65, 75, 0.5);
}

.btn-number:hover {
    background: linear-gradient(145deg, var(--accent-blue), var(--accent-purple));
    color: white;
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(157, 78, 221, 0.4);
}

.btn-operator {
    background-color: rgba(0, 174, 255, 0.8);
    font-weight: bold;
    color: white;
    border: 1px solid rgba(0, 194, 255, 0.4);
}

.btn-operator:hover {
    background: linear-gradient(145deg, var(--accent-purple), var(--accent-pink));
    color: white;
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(255, 0, 160, 0.4);
}

/* Special button styles */
.btn-special {
    background-color: rgba(157, 78, 221, 0.8);
    color: white;
    font-weight: bold;
    border: 1px solid rgba(177, 98, 241, 0.4);
}

.btn-special:hover {
    background: linear-gradient(145deg, var(--accent-pink), var(--accent-blue));
    color: white;
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0, 217, 255, 0.4);
}

/* Memory button styles */
.btn-memory {
    background-color: rgba(30, 34, 42, 0.8);
    color: #00aeff;
    font-weight: bold;
    transition: all 0.3s;
    border: 1px solid rgba(0, 164, 255, 0.3);
}

.btn-memory:hover {
    background-color: rgba(40, 44, 56, 0.9);
    transform: scale(1.05);
    box-shadow: 0 0 15px rgba(0, 174, 255, 0.5);
}

/* Parentheses buttons */
button[data-number="("],
button[data-number=")"] {
    background-color: rgba(30, 34, 42, 0.9);
    color: var(--accent-blue);
    font-weight: bold;
    font-size: 1.4em;
    border: 1px solid rgba(0, 174, 255, 0.3);
}

button[data-number="("]:hover,
button[data-number=")"]:hover {
    background-color: rgba(40, 44, 56, 0.95);
    color: var(--accent-purple);
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0, 174, 255, 0.3);
}

/* Equal button */
.btn-equal {
    background: linear-gradient(135deg, var(--accent-pink) 0%, var(--accent-purple) 100%);
    color: white;
    font-weight: bold;
    grid-column: span 4;
    font-size: 1.3em;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    animation: equalize 3s infinite;
    border: none;
    height: 45px;
}

.btn-equal:hover {
    animation: equal-pulse 1.5s infinite alternate;
    transform: translateY(-3px) scale(1.05);
}

@keyframes equalize {
    0%, 100% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
}

@keyframes equal-pulse {
    0% {
        box-shadow: 0 0 10px var(--accent-blue), 0 0 20px var(--accent-blue);
    }
    100% {
        box-shadow: 0 0 15px var(--accent-purple), 0 0 30px var(--accent-purple);
    }
}

/* Grid layout adjustments for calculator buttons */
/* Memory functions row */
.btn-memory:nth-child(1) { grid-area: mc; }
.btn-memory:nth-child(2) { grid-area: mr; }
.btn-memory:nth-child(3) { grid-area: mplus; }
.btn-memory:nth-child(4) { grid-area: mminus; }

/* Function row */
button[data-action="clear"] { grid-area: clear; }
button[data-action="backspace"] { grid-area: back; }
button[data-action="percent"] { grid-area: percent; }
button[data-action="divide"] { grid-area: divide; }

/* Number rows */
button[data-number="7"] { grid-area: seven; }
button[data-number="8"] { grid-area: eight; }
button[data-number="9"] { grid-area: nine; }
button[data-action="multiply"] { grid-area: multiply; }

button[data-number="4"] { grid-area: four; }
button[data-number="5"] { grid-area: five; }
button[data-number="6"] { grid-area: six; }
button[data-action="subtract"] { grid-area: subtract; }

button[data-number="1"] { grid-area: one; }
button[data-number="2"] { grid-area: two; }
button[data-number="3"] { grid-area: three; }
button[data-action="add"] { grid-area: add; }

/* Last row */
button[data-action="sqrt"] { grid-area: sqrt; }
button[data-number="0"] { grid-area: zero; }
button[data-number="."] { grid-area: decimal; }
button[data-number="("] { grid-area: openparen; }
button[data-number=")"] { grid-area: closeparen; }

/* Equals button */
button[data-action="calculate"] { grid-area: equals; }

/* Define the overall grid layout */
.buttons {
    grid-template-areas:
        "mc mr mplus mminus"
        "clear back percent divide"
        "seven eight nine multiply"
        "four five six subtract"
        "one two three add"
        "sqrt zero decimal openparen"
        "closeparen closeparen closeparen closeparen"
        "equals equals equals equals";
}

/* Special grid adjustments */
/* Make the closing parenthesis button span all columns */
button[data-number=")"] {
    grid-column: span 4;
    height: 35px;
}

/* Additional improvements for special operations and animations */
.btn-operator, .btn-special {
    overflow: visible;
}

.btn-operator::before, .btn-special::before {
    content: '';
    position: absolute;
    top: -3px;
    left: -3px;
    right: -3px;
    bottom: -3px;
    border-radius: calc(var(--button-radius) + 3px);
    background: linear-gradient(45deg, var(--accent-blue), var(--accent-purple), var(--accent-pink));
    opacity: 0;
    z-index: -1;
    transition: opacity 0.3s ease;
}

.btn-operator:hover::before, .btn-special:hover::before {
    opacity: 0.5;
    animation: rotate-gradient 2s linear infinite;
}

@keyframes rotate-gradient {
    0% {
        filter: hue-rotate(0deg);
    }
    100% {
        filter: hue-rotate(360deg);
    }
}

/* Media Queries for responsive design */
@media (max-width: 480px) {
    .calculator {
        padding: 15px;
    }
    
    .buttons {
        grid-gap: 6px;
        padding: 8px;
    }
    
    button {
        padding: 5px 0;
        font-size: 1em;
        height: 35px;
    }
    
    .display {
        font-size: 1.6em;
        min-height: 50px;
        padding: 8px 12px;
    }
    
    .brand h1 {
        font-size: 14px;
    }
    
    .equation {
        padding: 3px 12px;
        min-height: 20px;
        font-size: 0.8em;
    }
    
    .btn-equal {
        height: 40px;
        font-size: 1.2em;
    }
}

/* New unique animations for the calculator */
@keyframes neon-glow {
    0%, 100% {
        box-shadow: 0 0 5px rgba(0, 217, 255, 0.5),
                   0 0 10px rgba(0, 217, 255, 0.3),
                   0 0 15px rgba(0, 217, 255, 0.1);
    }
    50% {
        box-shadow: 0 0 10px rgba(0, 217, 255, 0.8),
                   0 0 20px rgba(0, 217, 255, 0.5),
                   0 0 30px rgba(0, 217, 255, 0.3);
    }
}

.calculator {
    animation: calculator-appear 1s forwards, neon-glow 4s ease-in-out infinite;
}

/* Quantum particle effect on button click */
.button-clicked::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 10px;
    height: 10px;
    background: radial-gradient(circle, var(--accent-blue) 0%, transparent 70%);
    border-radius: 50%;
    opacity: 1;
    transform: translate(-50%, -50%) scale(0);
    animation: quantum-particle 0.6s ease-out;
}

@keyframes quantum-particle {
    0% {
        transform: translate(-50%, -50%) scale(0);
        opacity: 1;
    }
    100% {
        transform: translate(-50%, -50%) scale(10);
        opacity: 0;
    }
}

/* Add CSS for memory buttons */
.btn-memory {
    background-color: rgba(60, 60, 70, 0.7);
    color: #00aeff;
    font-weight: bold;
    transition: all 0.2s;
}

.btn-memory:hover {
    background-color: rgba(80, 80, 100, 0.8);
    transform: scale(1.05);
}

/* Memory indicator */
.memory-indicator {
    position: absolute;
    top: 5px;
    right: 10px;
    background-color: var(--accent-blue);
    color: #fff;
    padding: 2px 6px;
    border-radius: 4px;
    font-size: 12px;
    display: none;
    animation: pulse 1.5s infinite;
}

/* Footer */
footer {
    margin-top: 80px;
    text-align: center;
    color: var(--text-light);
    font-size: 0.9em;
    opacity: 0.7;
    transition: opacity 0.3s;
    width: 100%;
    padding: 10px;
}

footer:hover {
    opacity: 1;
}

.highlight {
    color: var(--accent-blue);
    font-weight: bold;
}

/* Button Press Animations */
.button-clicked {
    animation: button-press 0.2s forwards;
}

@keyframes button-press {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(0.95);
    }
    100% {
        transform: scale(1);
    }
}

/* Type Effect for Display */
.type-effect {
    overflow: hidden;
    border-right: 2px solid var(--accent-blue);
    white-space: nowrap;
    animation: typing 0.5s steps(10, end), blink 0.75s step-end infinite;
}

@keyframes typing {
    from { width: 0 }
    to { width: 100% }
}

@keyframes blink {
    from, to { border-color: transparent }
    50% { border-color: var(--accent-blue) }
}

/* Add data-teleport animation */
.btn-number {
    position: relative;
    overflow: hidden;
    background-color: rgba(40, 45, 55, 0.8);
}

.btn-number::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(0, 217, 255, 0.1), transparent);
    top: 0;
    left: -100%;
    animation: data-teleport 8s infinite linear;
    animation-delay: calc(var(--delay, 0) * 0.5s);
}

/* Set different delays for each number button */
.btn-number:nth-child(5) { --delay: 1; }
.btn-number:nth-child(6) { --delay: 2; }
.btn-number:nth-child(7) { --delay: 3; }
.btn-number:nth-child(9) { --delay: 4; }
.btn-number:nth-child(10) { --delay: 5; }
.btn-number:nth-child(11) { --delay: 6; }
.btn-number:nth-child(13) { --delay: 7; }
.btn-number:nth-child(14) { --delay: 8; }
.btn-number:nth-child(15) { --delay: 9; }

@keyframes data-teleport {
    0% {
        left: -100%;
    }
    20%, 100% {
        left: 200%;
    }
}

/* Operator buttons with quantum effects */
.btn-operator {
    background-color: rgba(0, 174, 255, 0.8);
    color: white;
    font-weight: bold;
    position: relative;
    overflow: hidden;
    z-index: 1;
}

.btn-operator::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(255, 255, 255, 0.3) 0%, transparent 70%);
    opacity: 0;
    transform: scale(0.5);
    z-index: -1;
    animation: operator-pulse 3s infinite;
}

@keyframes operator-pulse {
    0%, 100% {
        opacity: 0;
        transform: scale(0.5);
    }
    50% {
        opacity: 0.3;
        transform: scale(1);
    }
}

/* Help Button and Modal */
.help-button {
    position: absolute;
    bottom: -50px;
    right: 10px;
    width: 40px;
    height: 40px;
    background-color: var(--accent-blue);
    color: white;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    box-shadow: var(--button-shadow);
    transition: all 0.3s;
    animation: float 3s ease-in-out infinite;
    z-index: 10;
}

@keyframes float {
    0%, 100% {
        transform: translateY(0) rotate(0deg);
    }
    25% {
        transform: translateY(-5px) rotate(5deg);
    }
    50% {
        transform: translateY(-10px) rotate(0deg);
    }
    75% {
        transform: translateY(-5px) rotate(-5deg);
    }
}

.help-button:hover {
    background-color: var(--accent-purple);
    transform: scale(1.1);
    box-shadow: 0 0 15px rgba(157, 78, 221, 0.7);
}

.help-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    z-index: 100;
    justify-content: center;
    align-items: center;
    backdrop-filter: blur(5px);
}

.help-modal-content {
    background-color: var(--secondary-dark);
    padding: 30px;
    border-radius: 20px;
    max-width: 500px;
    width: 90%;
    box-shadow: var(--calculator-shadow), var(--glow-blue);
    border: 1px solid var(--glass-border);
    animation: modal-appear 0.3s forwards;
    position: relative;
}

@keyframes modal-appear {
    from {
        opacity: 0;
        transform: translateY(-50px) scale(0.9);
    }
    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

.close-button {
    position: absolute;
    top: 15px;
    right: 20px;
    font-size: 28px;
    cursor: pointer;
    color: var(--text-light);
    transition: color 0.3s;
}

.close-button:hover {
    color: var(--accent-pink);
    transform: rotate(90deg);
    transition: all 0.3s;
}

.help-modal h2 {
    font-family: 'Orbitron', sans-serif;
    color: var(--accent-blue);
    margin-bottom: 20px;
    text-align: center;
    font-size: 1.5em;
    text-shadow: var(--glow-blue);
}

.help-modal ul {
    list-style-type: none;
    padding-left: 0;
    margin-bottom: 25px;
}

.help-modal li {
    margin-bottom: 15px;
    display: flex;
    align-items: center;
    color: var(--text-light);
    font-size: 0.95em;
    transition: transform 0.3s;
}

.help-modal li:hover {
    transform: translateX(5px);
}

.help-modal li i {
    margin-right: 15px;
    color: var(--accent-purple);
    min-width: 20px;
    text-align: center;
}

.keyboard-shortcuts {
    background-color: var(--primary-dark);
    padding: 15px;
    border-radius: 10px;
    margin-top: 15px;
}

.keyboard-shortcuts h3 {
    font-family: 'Orbitron', sans-serif;
    color: var(--accent-purple);
    margin-bottom: 15px;
    font-size: 1.1em;
    text-shadow: var(--glow-purple);
}

.shortcut {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
    font-size: 0.9em;
}

.shortcut span {
    background-color: var(--glass-bg);
    padding: 5px 10px;
    border-radius: 5px;
    margin-right: 10px;
    font-family: 'Orbitron', sans-serif;
    font-size: 0.85em;
    min-width: 90px;
    text-align: center;
    border: 1px solid var(--glass-border);
    transition: all 0.3s;
}

.shortcut:hover span {
    background-color: var(--accent-blue);
    color: white;
    box-shadow: 0 0 10px rgba(0, 217, 255, 0.5);
}

/* Footer */
footer {
    text-align: center;
    color: var(--text-light);
    font-size: 0.9em;
    opacity: 0.7;
    transition: opacity 0.3s;
    padding: 10px;
    margin-top: 30px;
    width: 100%;
    position: relative;
    z-index: 5;
}

footer:hover {
    opacity: 1;
}

.highlight {
    color: var(--accent-blue);
    font-weight: bold;
    position: relative;
    display: inline-block;
}

.highlight::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, transparent, var(--accent-blue), transparent);
    animation: highlight-pulse 2s infinite;
}

@keyframes highlight-pulse {
    0%, 100% {
        opacity: 0.3;
    }
    50% {
        opacity: 1;
    }
}

/* Quantum-themed display animations */
.display {
    position: relative;
    overflow: hidden;
}

.display::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to right, 
        rgba(0, 217, 255, 0) 0%,
        rgba(0, 217, 255, 0.05) 25%,
        rgba(157, 78, 221, 0.05) 50%,
        rgba(255, 0, 160, 0.05) 75%,
        rgba(0, 217, 255, 0) 100%
    );
    animation: quantum-wave 8s linear infinite;
    pointer-events: none;
}

@keyframes quantum-wave {
    0% {
        transform: translateX(-100%);
    }
    100% {
        transform: translateX(100%);
    }
}

/* Quantum bits animation */
.quantum-bits {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    pointer-events: none;
    overflow: hidden;
    z-index: 0;
}

.quantum-bit {
    position: absolute;
    width: 3px;
    height: 3px;
    background-color: var(--accent-blue);
    border-radius: 50%;
    opacity: 0;
    animation: quantum-bit-float var(--bit-duration) ease-in-out infinite;
    animation-delay: calc(var(--bit-delay) * 1s);
}

@keyframes quantum-bit-float {
    0%, 100% {
        opacity: 0;
        transform: translateY(100px) scale(0);
    }
    25%, 75% {
        opacity: 0.8;
        transform: translateY(50px) scale(1);
    }
    50% {
        opacity: 1;
        transform: translateY(0) scale(1.5);
    }
}

/* Brand logo animation */
.brand h1 {
    position: relative;
    animation: logo-glow 4s infinite alternate;
}

@keyframes logo-glow {
    0%, 100% {
        text-shadow: 0 0 5px rgba(0, 217, 255, 0.5),
                    0 0 10px rgba(0, 217, 255, 0.3);
    }
    50% {
        text-shadow: 0 0 10px rgba(0, 217, 255, 0.8),
                    0 0 20px rgba(0, 217, 255, 0.5),
                    0 0 30px rgba(0, 217, 255, 0.3);
    }
}

/* Quantum entanglement animation for operator buttons */
.btn-operator {
    position: relative;
}

.btn-operator::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle, var(--accent-blue) 0%, transparent 70%);
    border-radius: var(--button-radius);
    opacity: 0;
    transform: scale(0);
    animation: quantum-entangle 3s infinite;
}

@keyframes quantum-entangle {
    0%, 100% {
        opacity: 0;
        transform: scale(0.9);
    }
    50% {
        opacity: 0.2;
        transform: scale(1.1);
    }
}

/* Create quantum bits using JavaScript */
.calculator::after {
    content: '';
    position: absolute;
    bottom: 10px;
    right: 10px;
    width: 80px;
    height: 5px;
    background: linear-gradient(90deg, var(--accent-blue), var(--accent-purple), var(--accent-pink));
    border-radius: 5px;
    opacity: 0.7;
    animation: quantum-scanner 2s infinite alternate;
}

@keyframes quantum-scanner {
    0% {
        width: 40px;
        opacity: 0.3;
    }
    100% {
        width: 80px;
        opacity: 0.7;
    }
}

/* Ripple effect */
.ripple {
    position: absolute;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    transform: scale(0);
    animation: ripple-effect 0.6s linear;
    pointer-events: none;
}

@keyframes ripple-effect {
    to {
        transform: scale(2.5);
        opacity: 0;
    }
}

/* Success and error animations */
.calculation-success {
    animation: success-glow 1s;
}

.calculation-error {
    animation: error-shake 0.5s;
}

@keyframes success-glow {
    0%, 100% {
        box-shadow: inset 0 2px 10px rgba(0, 0, 0, 0.5);
    }
    50% {
        box-shadow: inset 0 2px 10px rgba(0, 0, 0, 0.5), 0 0 20px rgba(0, 255, 128, 0.8);
    }
}

@keyframes error-shake {
    0%, 100% {
        transform: translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
        transform: translateX(-5px);
    }
    20%, 40%, 60%, 80% {
        transform: translateX(5px);
    }
}

/* Success particles */
.success-particle {
    position: absolute;
    background: linear-gradient(135deg, var(--accent-blue), var(--accent-purple));
    border-radius: 50%;
    opacity: 0;
    transform: scale(0) translateX(0) translateY(0);
    animation: success-particle-move var(--duration) var(--delay) forwards;
    pointer-events: none;
    z-index: 100;
}

@keyframes success-particle-move {
    0% {
        opacity: 1;
        transform: scale(1) translateX(0) translateY(0);
    }
    100% {
        opacity: 0;
        transform: scale(0) 
            translateX(calc(cos(var(--angle)) * 100px)) 
            translateY(calc(sin(var(--angle)) * 100px));
    }
}

/* Error particles */
.error-particle {
    position: absolute;
    width: 5px;
    height: 5px;
    background-color: var(--accent-pink);
    border-radius: 50%;
    opacity: 0;
    animation: error-particle-float 1.5s var(--delay) forwards;
    pointer-events: none;
    z-index: 100;
}

@keyframes error-particle-float {
    0% {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
    100% {
        opacity: 0;
        transform: translateY(-30px) scale(0);
    }
}

/* Add more visual feedback animations */
.display.calculation-success {
    color: #00ff88;
    text-shadow: 0 0 10px rgba(0, 255, 136, 0.8);
}

.display.calculation-error {
    color: var(--accent-pink);
    text-shadow: 0 0 10px rgba(255, 0, 128, 0.8);
}

/* Button hover animations */
button:hover {
    transform: translateY(-3px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
}

button:active {
    transform: translateY(1px);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

/* Continuous orbit animation for calculator */
.calculator::before {
    content: '';
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: var(--accent-blue);
    border-radius: 50%;
    top: 0;
    left: 50%;
    transform-origin: 0 200px;
    animation: orbit 8s linear infinite;
    opacity: 0.7;
    filter: blur(3px);
}

@keyframes orbit {
    0% {
        transform: rotate(0deg) translateX(170px);
    }
    100% {
        transform: rotate(360deg) translateX(170px);
    }
}

/* Floating inputs animation */
.btn-number.clicked::before {
    content: attr(data-number);
    position: absolute;
    top: 0;
    left: 50%;
    transform: translate(-50%, -20px);
    color: var(--accent-blue);
    font-size: 1.2em;
    opacity: 0;
    animation: float-number 1s forwards;
    pointer-events: none;
}

@keyframes float-number {
    0% {
        opacity: 1;
        transform: translate(-50%, -20px);
    }
    100% {
        opacity: 0;
        transform: translate(-50%, -50px);
    }
}

/* Radar pulse animation */
.calculator-container::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    border-radius: 20px;
    background: radial-gradient(circle, transparent 0%, transparent 70%, var(--accent-blue) 100%);
    opacity: 0;
    animation: radar-pulse 4s infinite;
    pointer-events: none;
    z-index: -1;
}

@keyframes radar-pulse {
    0%, 100% {
        opacity: 0;
        transform: scale(0.8);
    }
    50% {
        opacity: 0.3;
        transform: scale(1.1);
    }
}

/* Adding matrix digital rain effect */
.calculator-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(0deg, 
        rgba(0, 0, 0, 0) 0%, 
        rgba(0, 255, 136, 0.05) 50%, 
        rgba(0, 0, 0, 0) 100%);
    background-size: 100% 20px;
    animation: matrix-rain 20s linear infinite;
    pointer-events: none;
    opacity: 0.5;
    z-index: -1;
}

@keyframes matrix-rain {
    0% {
        background-position: 0 0;
    }
    100% {
        background-position: 0 1000px;
    }
}

/* Add typing animation for equation display */
@keyframes typing-effect {
    from { width: 0 }
    to { width: 100% }
}

.equation.typing {
    overflow: hidden;
    white-space: nowrap;
    border-right: 2px solid var(--accent-blue);
    animation: typing-effect 1s steps(30, end), 
               blink-caret 0.75s step-end infinite;
}

@keyframes blink-caret {
    from, to { border-color: transparent }
    50% { border-color: var(--accent-blue) }
}

/* Add glow effect for display on calculation */
.display.calculating {
    animation: calculating-glow 1.5s infinite alternate;
}

@keyframes calculating-glow {
    0% {
        box-shadow: inset 0 0 5px var(--accent-blue);
    }
    100% {
        box-shadow: inset 0 0 15px var(--accent-purple);
    }
}

/* Add button press animation */
.button-active {
    transform: scale(0.95) !important;
    box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.3) !important;
    transition: all 0.1s !important;
}

/* Add ripple effect for button clicks */
.ripple {
    position: absolute;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    transform: scale(0);
    animation: ripple-effect 0.6s linear;
    pointer-events: none;
}

@keyframes ripple-effect {
    to {
        transform: scale(2.5);
        opacity: 0;
    }
}

/* Number row animation on page load */
.btn-number {
    opacity: 0;
    animation: fade-in-button 0.5s forwards;
    animation-delay: calc(var(--btn-delay) * 0.1s);
}

.btn-number:nth-child(5) { --btn-delay: 1; }
.btn-number:nth-child(6) { --btn-delay: 2; }
.btn-number:nth-child(7) { --btn-delay: 3; }
.btn-number:nth-child(9) { --btn-delay: 4; }
.btn-number:nth-child(10) { --btn-delay: 5; }
.btn-number:nth-child(11) { --btn-delay: 6; }
.btn-number:nth-child(13) { --btn-delay: 7; }
.btn-number:nth-child(14) { --btn-delay: 8; }
.btn-number:nth-child(15) { --btn-delay: 9; }

@keyframes fade-in-button {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Brand name animation */
.brand h1 {
    position: relative;
    animation: text-shadow-pulse 3s infinite alternate;
}

@keyframes text-shadow-pulse {
    0% {
        text-shadow: 0 0 5px var(--accent-blue);
    }
    50% {
        text-shadow: 0 0 10px var(--accent-purple);
    }
    100% {
        text-shadow: 0 0 15px var(--accent-pink);
    }
}

/* Solar panel enhanced animation */
.solar-panel {
    animation: solar-glow 4s infinite alternate;
}

@keyframes solar-glow {
    0% {
        box-shadow: 0 0 5px var(--accent-blue);
    }
    100% {
        box-shadow: 0 0 10px var(--accent-purple);
    }
}

/* Universe background enhanced */
.stars, .twinkling {
    transition: opacity 1s ease;
}

body:hover .stars {
    animation: stars-pulse 10s infinite alternate;
}

@keyframes stars-pulse {
    0% {
        opacity: 0.7;
    }
    100% {
        opacity: 1;
    }
}

/* Theme toggle animation */
.label .ball {
    transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55), background-color 0.4s;
}

.checkbox:checked + .label .ball {
    transform: translateX(24px);
    animation: ball-pulse 0.5s ease-out;
}

@keyframes ball-pulse {
    0%, 100% {
        transform: translateX(24px) scale(1);
    }
    50% {
        transform: translateX(24px) scale(1.2);
    }
}

/* Add memory indicator animation */
.memory-indicator {
    position: absolute;
    top: 5px;
    right: 10px;
    font-size: 10px;
    color: var(--accent-pink);
    opacity: 0;
    transition: opacity 0.3s;
}

.memory-indicator.active {
    opacity: 1;
    animation: memory-pulse 2s infinite;
}

@keyframes memory-pulse {
    0%, 100% {
        opacity: 0.5;
    }
    50% {
        opacity: 1;
    }
} 
